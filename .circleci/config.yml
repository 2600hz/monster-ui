version: 2

workflows:
  version: 2
  build_branch:
    jobs:
      - mkdocs
      - build
      - build_centos7:
          requires:
            - mkdocs
            - build
          
  build_release:
    jobs:
      - mkdocs:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
              
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
              
      - build_centos7:
          requires:
            - mkdocs
            - build
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
             
jobs:
  mkdocs:
    docker:
      - image: circleci/python:3.7.0
    steps:
      - checkout
      - run: sudo pip install PyYAML
      - run: ./scripts/validate_mkdocs.py
      - run: ./scripts/reconcile_docs_to_index.bash
      
  build_centos7:
    docker:
      - image: offical2600hz/monster-ui-packager:1.2-centos-7
        user: circleci
    shell: /bin/bash --login
    working_directory: /home/circleci/2600hz/monster-ui
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      BASH_ENV: "/home/circleci/2600hz/.bashrc"
      BUILD_ROOT: "/home/circleci/2600hz/packager"
      BUILD_SOURCES: "/home/circleci/2600hz/packager/SOURCES"
      BUILD_RPMS: "/home/circleci/2600hz/packager/RPMS"
      APP_DIR: "/home/circleci/2600hz/monster-ui"
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
      - restore_cache:
          key: dependency-cache-centos-{{ checksum "package.json" }}
      - run:
          name: Install dependencies from package.json
          command: sudo npm install
      - run:
          name: Run a production build
          command: sudo gulp build-prod
      - run:
          name: Generating version info
          command: |
            cd $BUILD_ROOT
            VERSION=$(./version)
            RELEASE=$(./release)
            PACKAGE_NAME=$(./package_name)
            echo "export PACKAGE_NAME=${PACKAGE_NAME}" >> $BASH_ENV
            echo "export VERSION=${VERSION}" >> $BASH_ENV
            echo "export RELEASE=${RELEASE}" >> $BASH_ENV
            PACKAGE_NAME=$(./package_name)
            echo "export PACKAGE_NAME=${PACKAGE_NAME}" >> $BASH_ENV
            echo "build version for ${PACKAGE_NAME} version: ${VERSION} release: ${RELEASE}"
      - run:
          name: Preparing source
          command: |           
            cd $BUILD_ROOT
            ./package_docs
            cd $BUILD_SOURCES
            echo " - copy build into artifacts"
            cp -R ${APP_DIR}/dist/* ${BUILD_SOURCES}/
            echo " - generate build version and changelog"
            echo " - removing files that should not be packaged in the source tar"
            rm -rf ${BUILD_SOURCES}/.??*
            rm -rf ${BUILD_SOURCES}/doc*
            rm -rf ${BUILD_SOURCES}/*.md
            echo " - creating the source tar"
            cd $BUILD_ROOT
            ARTIFACTS_NAME=${PACKAGE_NAME}-${VERSION}
            mkdir -p ${ARTIFACTS_NAME}
            cp -r ${BUILD_SOURCES}/* ${ARTIFACTS_NAME}/.
            tar -cf ${ARTIFACTS_NAME}.tar ${ARTIFACTS_NAME}
            cp ${ARTIFACTS_NAME}.tar ${BUILD_SOURCES}/.
            
      - run:
          name: Building package
          command: |
            cd $BUILD_ROOT
            ./build
      - store_artifacts:
          path: /home/circleci/2600hz/packager/RPMS
      - save_cache:
          key: dependency-cache-centos-{{ checksum "package.json" }}
          paths:
            - ./node_modules

  build:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - run:
          name: Update npm to latest
          command: sudo npm install --global npm@latest
      - run:
          name: Install gulp-cli globally
          command: sudo npm install --global gulp-cli
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies from package.json
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run a production build
          command: gulp build-prod
